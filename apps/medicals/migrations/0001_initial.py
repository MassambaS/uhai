# Generated by Django 4.2.7 on 2023-12-23 14:18

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('schools', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Consultation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('symptomes', models.TextField(default='')),
                ('comments', models.TextField(default='')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schools.students')),
            ],
            options={
                'db_table': 'consultations',
            },
        ),
        migrations.CreateModel(
            name='Drugs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'Drugs',
            },
        ),
        migrations.CreateModel(
            name='Prescriptions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('consultation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='medicals.consultation')),
            ],
            options={
                'db_table': 'prescriptions',
            },
        ),
        migrations.CreateModel(
            name='OximeteryTensiometer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('value', models.DecimalField(blank=True, decimal_places=2, max_digits=5)),
                ('type', models.CharField(choices=[('OXY', 'Oxymetery'), ('TEMP', 'Thermometer')], max_length=4)),
                ('by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('why', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='medicals.consultation')),
            ],
            options={
                'db_table': 'oximetry_tensiometer',
            },
        ),
        migrations.CreateModel(
            name='MedicalLeave',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('comments', models.TextField(default='')),
                ('start', models.DateTimeField(blank=True, null=True)),
                ('end', models.DateTimeField(blank=True, null=True)),
                ('prescription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='medicals.prescriptions')),
            ],
            options={
                'db_table': 'medical_leaves',
            },
        ),
        migrations.CreateModel(
            name='Hospital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('type', models.CharField(choices=[('NRH', 'National Referral Hospital'), ('RRH', 'Regional Referral Hospital'), ('GH', 'General Hospital'), ('HC_IV', 'HC IV (County/Constituency)'), ('HC_III', 'HC III (Sub county)'), ('HC_II', 'HC II (Parish)'), ('VHT', 'Village Health Team')], max_length=6)),
                ('ownership', models.CharField(choices=[('GOV', 'Governement'), ('PRIV', 'Private')], max_length=4)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='schools.village')),
            ],
            options={
                'db_table': 'hospitals',
            },
        ),
        migrations.CreateModel(
            name='DrugsPrescripted',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('comments', models.TextField()),
                ('taking_number', models.IntegerField(default=1)),
                ('taking_interval', models.CharField(choices=[('MO', 'Morning only'), ('NO', 'Noon Only'), ('NI', 'Night Only'), ('MO_NO', 'Morning & Noon'), ('MO_NI', 'Morning & Night'), ('NO_NI', 'Morning & Night'), ('MO_NO_NI', 'Morning, Noon & Night')], max_length=8)),
                ('renew', models.BooleanField(default=False)),
                ('start', models.DateTimeField(blank=True, null=True)),
                ('end', models.DateTimeField(blank=True, null=True)),
                ('drug', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='medicals.drugs')),
                ('prescription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='medicals.prescriptions')),
            ],
            options={
                'db_table': 'drugs_prescripted',
            },
        ),
        migrations.CreateModel(
            name='BPM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('systole', models.DecimalField(blank=True, decimal_places=2, max_digits=5)),
                ('diastole', models.DecimalField(blank=True, decimal_places=2, max_digits=5)),
                ('pulse', models.DecimalField(blank=True, decimal_places=2, max_digits=5)),
                ('by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('why', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='medicals.consultation')),
            ],
            options={
                'db_table': 'bpms',
            },
        ),
        migrations.CreateModel(
            name='BMI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=5)),
                ('height', models.DecimalField(blank=True, decimal_places=2, max_digits=5)),
                ('bmi', models.DecimalField(blank=True, decimal_places=2, max_digits=5)),
                ('by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('why', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='medicals.consultation')),
            ],
            options={
                'db_table': 'bmis',
            },
        ),
    ]
